{"version":3,"sources":["components/Header/Header.jsx","components/Instrucciones/Instrucciones.jsx","components/Grupo/Grupo.jsx","components/GraphViz/GraphViz.jsx","components/OriginGrupo/OriginGrupo.jsx","components/OriginGraphViz/OriginGraphViz.jsx","components/Consulta/Consulta.jsx","components/GoogleMap/GoogleMap.jsx","components/DetalleTru/DetalleTru.jsx","components/GoogleMapMarkers/GoogleMapMarkers.jsx","components/DetalleActividad/DetalleActividad.jsx","components/DetalleTransaccion/DetalleTransaccion.jsx","components/Detalle/Detalle.jsx","components/Convenciones/Convensiones.jsx","components/Flecha/Flecha.jsx","components/Visualization/Visualization.jsx","components/CrearTransaccion/CrearTransaccion.jsx","components/CrearTransformacion/CrearTransformacion.jsx","components/Cartoflex/Cartoflex.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","actorActivo","setActorActivo","idRef","useRef","actorRef","className","ref","onChange","current","value","setTipo","disabled","type","placeholder","inputRef","onClick","setBuscado","setActor","setConsulta","setMachete","machete","undefined","Instrucciones","Grupo","actividad","setActividad","grupos","setGrupos","lines","setLines","lines2","setLines2","calculateXCoordinate","tru","element","document","getElementById","id","parent","parentElement","parentOffset","getBoundingClientRect","left","renderLines","newLines","produce","map","i","key","x1","y1","x2","y2","style","stroke","colores","transacciones","fuente","due√±oActual","renderLines2","grupo","actor","handleActualizar","handleactualizar","useEffect","newActividad","actividades","find","act","consumidoPor","newGrupos","truAct","siguiente","push","Object","values","backgroundColor","coloresClaros","borderColor","selectTru","trans","Fragment","selectTransaccion","selectActividad","tipo","GraphViz","existe","setExiste","buscado","setActividades","actualizar","setActualizar","Propilco","Cartoflex","Transportador","Canvan","handleResize","window","addEventListener","fetch","consulta","then","response","json","data","error","reverse","length","destino","OriginGrupo","siguienteActividad","setSiguienteActividad","x","includes","consume","indice","OrginGraphViz","scrollTo","top","body","scrollHeight","behavior","Consulta","GoogleApiWrapper","apiKey","google","zoom","containerStyle","position","width","height","initialCenter","lat","ubicacion","lng","lon","center","DetalleTru","updateInput","SKU","UPC","consumido","keys","caracteristicas","filter","caracteristica","imagenes","imagen","src","videos","video","GoogleMap","origen","DetalleActividad","fecha","DetalleTransaccion","transaccion","trus","Detalle","Convensiones","Flecha","Visualization","setTru","setTransaccion","text","CrearTransaccion","setTrus","esperando","setEsperando","name","request","Date","toISOString","completo","method","JSON","stringify","headers","alert","replace","console","log","msg","CrearTransformacion","consumidos","setConsumidos","producidos","setProducidos","trusConsumidos","trusProducidos","referencia","cantidad","cliente","dimensiones","producto","trus_consumidos","trus_producidos","opcion","setOpcion","location","withRouter","exact","path","render","Boolean","hostname","match","history","createBrowserHistory","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.27f6e0ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction Header(props) {\r\n    let [actorActivo, setActorActivo] = useState(true);\r\n    let idRef = useRef();\r\n    let actorRef = useRef();\r\n\r\n    let handleChange = () => {\r\n        if (idRef.current.value === 'SKU') {\r\n            props.setTipo('sku');\r\n            setActorActivo(false);\r\n        } else if (idRef.current.value === 'UPC') {\r\n            props.setTipo('upc');\r\n            setActorActivo(true);\r\n        } else {\r\n            props.setTipo('id');\r\n            setActorActivo(true);\r\n        }\r\n    };\r\n\r\n    let handleRastrear = () => {\r\n        if (props.inputRef.current.value !== '') {\r\n            props.setBuscado(props.inputRef.current.value);\r\n            props.setActor(actorRef.current.value);\r\n            props.setConsulta('destino');\r\n            props.setMachete(!props.machete);\r\n        } else {\r\n            props.setBuscado(undefined);\r\n            props.setConsulta('');\r\n        }\r\n    };\r\n\r\n    let handleProcedencia = () => {\r\n        if (props.inputRef.current.value !== '') {\r\n            props.setBuscado(props.inputRef.current.value);\r\n            props.setActor(actorRef.current.value);\r\n            props.setConsulta('origen');\r\n            props.setMachete(!props.machete);\r\n        } else {\r\n            props.setBuscado(undefined);\r\n            props.setConsulta('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='header'>\r\n            <label className='labelHeader'>Buscar por:</label>\r\n            <select\r\n                className='selectIdentificador'\r\n                ref={idRef}\r\n                onChange={handleChange}\r\n            >\r\n                <option className='optionBusqueda' value='ID TRU'>\r\n                    ID TRU\r\n                </option>\r\n                <option value='SKU'>SKU</option>\r\n                <option value='UPC'>UPC</option>\r\n            </select>\r\n            <select\r\n                className='selectActor'\r\n                ref={actorRef}\r\n                disabled={actorActivo}\r\n            >\r\n                <option>Propilco</option>\r\n                <option>Cartoflex</option>\r\n                <option>Transportador</option>\r\n                <option>Canvan</option>\r\n            </select>\r\n            <input\r\n                type='text'\r\n                placeholder='Identificador del activo'\r\n                className='inputBuscar'\r\n                ref={props.inputRef}\r\n            />\r\n            <div className='contenedorBotones'>\r\n                <button className='boton' onClick={handleProcedencia}>\r\n                    Consultar Procedencia\r\n                </button>\r\n                <button className='boton' onClick={handleRastrear}>\r\n                    Rastrear Activo\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Instrucciones.css';\r\n\r\nfunction Instrucciones() {\r\n    return (\r\n        <div className='contenedorInstrucciones'>\r\n            <h1>Bienvenido al Sistema de Seguimiento Blockchain</h1>\r\n            <br />\r\n            <div className='contenedorPasos'>\r\n                <h3>\r\n                    Para consultar un activo de la cadena de suministro siga los\r\n                    siguientes pasos:\r\n                </h3>\r\n                <ul>\r\n                    <li>\r\n                        Escoga el metodo de busqueda del activo (ID, SKU, o UPC)\r\n                    </li>\r\n                    <li>Si escogio SKU, escoja el actor que expidi√≥ el SKU</li>\r\n                    <li>\r\n                        Ingrese el identificador √∫nico del activo que desea\r\n                        consultar\r\n                    </li>\r\n                    <li>\r\n                        Oprima el boton correspondiente a la consulta que desea\r\n                        realizar\r\n                    </li>\r\n                    <br />\r\n                    <ul>\r\n                        <li>\r\n                            <b>Consultar Procedencia:</b> Esta consulta muestra\r\n                            el historial de todo lo que pas√≥ en la cadena de\r\n                            suministro para lograr producir el activo que\r\n                            consult√≥\r\n                        </li>\r\n                        <li>\r\n                            <b>Rastrear activo:</b> Esta consulta muestra todo\r\n                            lo que paso con un activo desde que fue registrado\r\n                            con el identificador unico\r\n                        </li>\r\n                    </ul>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Instrucciones;\r\n","import React from 'react';\r\nimport './Grupo.css';\r\nimport './Trus.css';\r\nimport './Actividades.css';\r\nimport './Lineas.css';\r\nimport './Transacciones.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Grupo(props) {\r\n    let [actividad, setActividad] = useState(undefined);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [lines2, setLines2] = useState(<div></div>);\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let element = document.getElementById(tru.id);\r\n        let parent = element?.parentElement.parentElement.parentElement;\r\n        let parentOffset = parent?.getBoundingClientRect().left;\r\n        let x = element?.getBoundingClientRect().left + 12 - parentOffset;\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = actividad?.produce.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke:\r\n                            props.colores[\r\n                                tru?.transacciones[0]?.fuente ||\r\n                                    tru?.due√±oActual\r\n                            ],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n    let renderLines2 = () => {\r\n        let newLines = props.grupo.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1={calculateXCoordinate(tru)}\r\n                    y1='0'\r\n                    x2='50%'\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: props.colores[actividad?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines2(newLines);\r\n    };\r\n\r\n    let handleActualizar = () => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    };\r\n\r\n    useEffect(() => {\r\n        let newActividad = props.actividades.find(\r\n            (act) => act.id === props.grupo[0].consumidoPor\r\n        );\r\n\r\n        let newGrupos = {};\r\n        for (let i in newActividad?.produce) {\r\n            let truAct = newActividad?.produce[i];\r\n            let siguiente = truAct.consumidoPor || truAct.id;\r\n            if (newGrupos[siguiente]) {\r\n                newGrupos[siguiente].push(truAct);\r\n            } else {\r\n                newGrupos[siguiente] = [truAct];\r\n            }\r\n        }\r\n        setGrupos(Object.values(newGrupos));\r\n        setActividad(newActividad);\r\n        /**\r\n    let newGrupo = [...props.grupo];\r\n    for (let i in newGrupo) {\r\n      newGrupo[i].x =\r\n        document.getElementById(newGrupo[i].id).getBoundingClientRect().left +\r\n        12;\r\n    }*/\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    }, [grupos]);\r\n\r\n    return (\r\n        <div className='contenedorGrupo'>\r\n            {props.grupo.map((tru) => {\r\n                return (\r\n                    <div className='contenedorTru'>\r\n                        <div\r\n                            className='tru'\r\n                            id={tru.id}\r\n                            style={{\r\n                                backgroundColor:\r\n                                    props.coloresClaros[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                                borderColor:\r\n                                    props.colores[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                            onClick={() => props.selectTru(tru)}\r\n                        ></div>\r\n                        {tru?.transacciones.map((trans, i) => (\r\n                            <React.Fragment>\r\n                                <svg className='lineasCortas'>\r\n                                    <line\r\n                                        key={i}\r\n                                        className='linea'\r\n                                        x1='50%'\r\n                                        y1='0'\r\n                                        x2='50%'\r\n                                        y2='50'\r\n                                        style={{\r\n                                            stroke: props.colores[trans.fuente],\r\n                                        }}\r\n                                    />\r\n                                </svg>\r\n                                <div\r\n                                    className='transaccion'\r\n                                    onClick={() =>\r\n                                        props.selectTransaccion(trans)\r\n                                    }\r\n                                ></div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                );\r\n            })}\r\n            {actividad && (\r\n                <React.Fragment>\r\n                    <svg className='lineas'>{lines2}</svg>\r\n                    <div\r\n                        id={actividad.id}\r\n                        className='actividad'\r\n                        style={{\r\n                            backgroundColor:\r\n                                props.coloresClaros[actividad?.actor],\r\n                            borderColor: props.colores[actividad?.actor],\r\n                        }}\r\n                        onClick={() => props.selectActividad(actividad)}\r\n                    >\r\n                        {actividad.tipo}\r\n                    </div>\r\n                    <svg className='lineas'>{lines}</svg>\r\n                </React.Fragment>\r\n            )}\r\n            <div className='contenedorGrupos'>\r\n                {grupos.map((grupo) => (\r\n                    <Grupo\r\n                        grupo={grupo}\r\n                        handleactualizar={handleActualizar}\r\n                        actividades={props.actividades}\r\n                        colores={props.colores}\r\n                        coloresClaros={props.coloresClaros}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Grupo;\r\n","import React from 'react';\r\nimport './GraphViz.css';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Grupo from '../Grupo/Grupo';\r\n\r\nfunction GraphViz(props) {\r\n    let [existe, setExiste] = useState(true);\r\n    let [buscado, setBuscado] = useState(undefined);\r\n    let [actividades, setActividades] = useState([]);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [actualizar, setActualizar] = useState(false);\r\n\r\n    let colores = {\r\n        Propilco: 'rgb(255, 136, 1)',\r\n        Cartoflex: 'rgb(122, 182, 72)',\r\n        Transportador: 'rgb(128, 0, 255)',\r\n        Canvan: 'rgb(255, 128, 0)',\r\n    };\r\n\r\n    let coloresClaros = {\r\n        Propilco: 'rgb(255, 136, 1, 0.2)',\r\n        Cartoflex: 'rgb(122, 182, 72, 0.2)',\r\n        Transportador: 'rgb(128, 0, 255, 0.2)',\r\n        Canvan: 'rgb(255, 128, 0, 0.2)',\r\n    };\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let x =\r\n            document.getElementById(tru.id)?.getBoundingClientRect().left + 5;\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = actividades[0]?.produce.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: colores[actividades[0]?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n\r\n    let handleResize = () => {\r\n        //hacer algo para que se vuelva a renderizar el grafo\r\n        renderLines();\r\n    };\r\n\r\n    let handleactualizar = () => {\r\n        renderLines();\r\n        setActualizar(!actualizar);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(props.consulta).then((response) => {\r\n            response.json().then((data) => {\r\n                if (!data.error) {\r\n                    setExiste(true);\r\n                    data.actividades.reverse();\r\n                    let newGrupos = {};\r\n                    for (let i in data.actividades[0]?.produce) {\r\n                        let truAct = data.actividades[0]?.produce[i];\r\n                        let siguiente = truAct.consumidoPor || truAct.id;\r\n                        if (newGrupos[siguiente]) {\r\n                            newGrupos[siguiente].push(truAct);\r\n                        } else {\r\n                            newGrupos[siguiente] = [truAct];\r\n                        }\r\n                    }\r\n                    setActividades(data.actividades);\r\n                    setBuscado(data.tru);\r\n                    setGrupos(Object.values(newGrupos));\r\n                } else {\r\n                    setExiste(false);\r\n                }\r\n            });\r\n        });\r\n    }, [props.buscado]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {existe && (\r\n                <div className='contenedorMaximoViz'>\r\n                    <div className='contenedorBuscado'>\r\n                        <div\r\n                            className='buscado'\r\n                            style={{\r\n                                backgroundColor:\r\n                                    coloresClaros[\r\n                                        buscado?.transacciones[0]?.fuente ||\r\n                                            buscado?.due√±oActual\r\n                                    ],\r\n                                borderColor:\r\n                                    colores[\r\n                                        buscado?.transacciones[0]?.fuente ||\r\n                                            buscado?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                            onClick={() => props.selectTru(buscado)}\r\n                        ></div>\r\n                    </div>\r\n                    {(buscado?.transacciones.length > 0 ||\r\n                        actividades?.length > 0) && (\r\n                        <svg className='lineas'>\r\n                            <line\r\n                                className='linea'\r\n                                x1='50%'\r\n                                y1='0'\r\n                                x2='50%'\r\n                                y2='50'\r\n                                style={{\r\n                                    stroke:\r\n                                        colores[\r\n                                            buscado?.transacciones[0]?.fuente ||\r\n                                                buscado?.due√±oActual\r\n                                        ],\r\n                                }}\r\n                            />\r\n                        </svg>\r\n                    )}\r\n                    {buscado?.transacciones.map((trans, i) => (\r\n                        <React.Fragment>\r\n                            <div\r\n                                className='transaccionBase'\r\n                                onClick={() => props.selectTransaccion(trans)}\r\n                            ></div>\r\n                            {actividades.length > 0 && (\r\n                                <svg className='lineasCortas'>\r\n                                    <line\r\n                                        key={i}\r\n                                        className='linea'\r\n                                        x1='50%'\r\n                                        y1='0'\r\n                                        x2='50%'\r\n                                        y2='50'\r\n                                        style={{\r\n                                            stroke: colores[trans.destino],\r\n                                        }}\r\n                                    />\r\n                                </svg>\r\n                            )}\r\n                        </React.Fragment>\r\n                    ))}\r\n                    {actividades.length > 0 && (\r\n                        <div\r\n                            className='firstActivity'\r\n                            id={actividades[0]?.id}\r\n                            style={{\r\n                                backgroundColor:\r\n                                    coloresClaros[actividades[0]?.actor],\r\n                                borderColor: colores[actividades[0]?.actor],\r\n                            }}\r\n                            onClick={() =>\r\n                                props.selectActividad(actividades[0])\r\n                            }\r\n                        >\r\n                            {actividades[0]?.tipo}\r\n                        </div>\r\n                    )}\r\n                    <svg className='lineas'>{lines}</svg>\r\n                    <div className='contenedorGrupos'>\r\n                        <div className='contenedorPrimerGrupo'>\r\n                            {grupos.map((grupo) => (\r\n                                <Grupo\r\n                                    grupo={grupo}\r\n                                    actualizar={actualizar}\r\n                                    handleactualizar={handleactualizar}\r\n                                    actividades={actividades}\r\n                                    colores={colores}\r\n                                    coloresClaros={coloresClaros}\r\n                                    selectTru={props.selectTru}\r\n                                    selectActividad={props.selectActividad}\r\n                                    selectTransaccion={props.selectTransaccion}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {!existe && (\r\n                <div className='contenedorInstrucciones'>\r\n                    <h2>No se encontro el activo</h2>\r\n                    <h3>\r\n                        Porfavor revise el identificador y vuelva a intentar\r\n                    </h3>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GraphViz;\r\n","import React from 'react';\r\nimport './OriginGrupo.css';\r\nimport './Trus.css';\r\nimport './Actividades.css';\r\nimport './Lineas.css';\r\nimport './Transacciones.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nfunction OriginGrupo(props) {\r\n    let [actividad, setActividad] = useState(undefined);\r\n    let [siguienteActividad, setSiguienteActividad] = useState(undefined);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [lines2, setLines2] = useState(<div></div>);\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let element = document.getElementById(tru.id);\r\n        let parent = element?.parentElement.parentElement.parentElement;\r\n        let parentOffset = parent?.getBoundingClientRect().left;\r\n        let x = element?.getBoundingClientRect().left + 12 - parentOffset;\r\n        if (props.buscado.id.includes('47b2c630-7422-11ea-9dba-a31d6f3c8f24')) {\r\n            x = element?.getBoundingClientRect().left + 92.5 - parentOffset;\r\n        }\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = siguienteActividad?.consume.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke:\r\n                            props.colores[\r\n                                tru?.transacciones[0]?.fuente ||\r\n                                    tru?.due√±oActual\r\n                            ],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n    let renderLines2 = () => {\r\n        let newActividad = props.actividades.find((act, i) => {\r\n            return act.id === props.grupo[0].consumidoPor;\r\n        });\r\n        let newLines = props.grupo.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1={calculateXCoordinate(tru)}\r\n                    y1='0'\r\n                    x2='50%'\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: props.colores[newActividad?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines2(newLines);\r\n    };\r\n\r\n    let handleActualizar = () => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    };\r\n\r\n    useEffect(() => {\r\n        let indice = 0;\r\n        let newActividad = props.actividades.find((act, i) => {\r\n            indice = i;\r\n            return act.id === props.grupo[0].consumidoPor;\r\n        });\r\n        let siguienteActividad = props.actividades[indice + 1];\r\n\r\n        if (siguienteActividad) {\r\n            let newGrupos = {};\r\n            for (let i in siguienteActividad?.consume) {\r\n                let truAct = siguienteActividad?.consume[i];\r\n                let siguiente = truAct.consumidoPor || truAct.id;\r\n                if (newGrupos[siguiente]) {\r\n                    newGrupos[siguiente].push(truAct);\r\n                } else {\r\n                    newGrupos[siguiente] = [truAct];\r\n                }\r\n            }\r\n            setGrupos(Object.values(newGrupos));\r\n        }\r\n        setSiguienteActividad(siguienteActividad);\r\n        setActividad(newActividad);\r\n        /**\r\n    let newGrupo = [...props.grupo];\r\n    for (let i in newGrupo) {\r\n      newGrupo[i].x =\r\n        document.getElementById(newGrupo[i].id).getBoundingClientRect().left +\r\n        12;\r\n    }*/\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    }, [grupos]);\r\n\r\n    return (\r\n        <div className='contenedorGrupo'>\r\n            {props.grupo.map((tru) => {\r\n                return (\r\n                    <div className='contenedorTru'>\r\n                        <div\r\n                            className='tru'\r\n                            id={tru.id}\r\n                            style={{\r\n                                backgroundColor:\r\n                                    props.coloresClaros[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                                borderColor:\r\n                                    props.colores[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                            onClick={() => props.selectTru(tru)}\r\n                        ></div>\r\n                        {tru?.transacciones.map((trans, i) => (\r\n                            <React.Fragment>\r\n                                <svg className='lineasCortas'>\r\n                                    <line\r\n                                        key={i}\r\n                                        className='linea'\r\n                                        x1='50%'\r\n                                        y1='0'\r\n                                        x2='50%'\r\n                                        y2='50'\r\n                                        style={{\r\n                                            stroke: props.colores[trans.fuente],\r\n                                        }}\r\n                                    />\r\n                                </svg>\r\n                                <div\r\n                                    className='transaccion'\r\n                                    onClick={() =>\r\n                                        props.selectTransaccion(trans)\r\n                                    }\r\n                                ></div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                );\r\n            })}\r\n            {actividad && (\r\n                <React.Fragment>\r\n                    <svg className='lineas'>{lines2}</svg>\r\n                    <div\r\n                        id={actividad.id}\r\n                        className='actividad'\r\n                        style={{\r\n                            backgroundColor:\r\n                                props.coloresClaros[actividad?.actor],\r\n                            borderColor: props.colores[actividad?.actor],\r\n                        }}\r\n                        onClick={() => props.selectActividad(actividad)}\r\n                    >\r\n                        {actividad.tipo}\r\n                    </div>\r\n                    {siguienteActividad && (\r\n                        <svg className='lineas'>{lines}</svg>\r\n                    )}\r\n                </React.Fragment>\r\n            )}\r\n            <div className='contenedorGrupos'>\r\n                {grupos.map((grupo) => (\r\n                    <OriginGrupo\r\n                        buscado={props.buscado}\r\n                        grupo={grupo}\r\n                        handleactualizar={handleActualizar}\r\n                        actividades={props.actividades}\r\n                        colores={props.colores}\r\n                        coloresClaros={props.coloresClaros}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OriginGrupo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport OriginGrupo from '../OriginGrupo/OriginGrupo';\r\nimport '../OriginGraphViz/OriginGraphViz.css';\r\n\r\nfunction OrginGraphViz(props) {\r\n    let [existe, setExiste] = useState(true);\r\n    let [buscado, setBuscado] = useState(undefined);\r\n    let [actividades, setActividades] = useState([]);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [actualizar, setActualizar] = useState(false);\r\n\r\n    let colores = {\r\n        Propilco: 'rgb(255, 136, 1)',\r\n        Cartoflex: 'rgb(122, 182, 72)',\r\n        Transportador: 'rgb(128, 0, 255)',\r\n        Canvan: 'rgb(255, 128, 0)',\r\n    };\r\n\r\n    let coloresClaros = {\r\n        Propilco: 'rgb(255, 136, 1, 0.2)',\r\n        Cartoflex: 'rgb(122, 182, 72, 0.2)',\r\n        Transportador: 'rgb(128, 0, 255, 0.2)',\r\n        Canvan: 'rgb(255, 128, 0, 0.2)',\r\n    };\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let x =\r\n            document.getElementById(tru.id)?.getBoundingClientRect().left + 5;\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = actividades[1]?.consume.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: colores[actividades[0]?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n\r\n    let handleResize = () => {\r\n        //hacer algo para que se vuelva a renderizar el grafo\r\n        renderLines();\r\n    };\r\n\r\n    let handleactualizar = () => {\r\n        renderLines();\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(props.consulta).then((response) => {\r\n            response.json().then((data) => {\r\n                if (!data.error) {\r\n                    setExiste(true);\r\n                    let newGrupos = {};\r\n                    for (let i in data.actividades[1]?.consume) {\r\n                        let truAct = data.actividades[1]?.consume[i];\r\n                        let siguiente = truAct.consumidoPor || truAct.id;\r\n                        if (newGrupos[siguiente]) {\r\n                            newGrupos[siguiente].push(truAct);\r\n                        } else {\r\n                            newGrupos[siguiente] = [truAct];\r\n                        }\r\n                    }\r\n                    setActividades(data.actividades);\r\n                    setBuscado(data.tru);\r\n                    setGrupos(Object.values(newGrupos));\r\n                } else {\r\n                    setExiste(false);\r\n                }\r\n            });\r\n        });\r\n    }, [props.buscado]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    useEffect(() => {\r\n        let contenedor = document.getElementById('contenedorViz');\r\n        contenedor.scrollTo({\r\n            top: document.body.scrollHeight,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }, [lines]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {existe && (\r\n                <div className='contenedorMaximoViz'>\r\n                    <div\r\n                        className='firstActivity'\r\n                        id={actividades[0]?.id}\r\n                        style={{\r\n                            backgroundColor:\r\n                                coloresClaros[actividades[0]?.actor],\r\n                            borderColor: colores[actividades[0]?.actor],\r\n                        }}\r\n                        onClick={() => props.selectActividad(actividades[0])}\r\n                    >\r\n                        {actividades[0]?.tipo}\r\n                    </div>\r\n                    {actividades.length > 1 && (\r\n                        <svg className='lineas'>{lines}</svg>\r\n                    )}\r\n                    <div className='contenedorGrupos'>\r\n                        <div className='contenedorPrimerGrupo'>\r\n                            {grupos.map((grupo) => (\r\n                                <OriginGrupo\r\n                                    buscado={buscado}\r\n                                    grupo={grupo}\r\n                                    actualizar={actualizar}\r\n                                    handleactualizar={handleactualizar}\r\n                                    actividades={actividades}\r\n                                    colores={colores}\r\n                                    coloresClaros={coloresClaros}\r\n                                    selectTru={props.selectTru}\r\n                                    selectActividad={props.selectActividad}\r\n                                    selectTransaccion={props.selectTransaccion}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <svg className='lineas lineaFinal'>\r\n                        <line\r\n                            className='linea'\r\n                            x1='50%'\r\n                            y1='0'\r\n                            x2='50%'\r\n                            y2='50'\r\n                            style={{\r\n                                stroke:\r\n                                    colores[\r\n                                        buscado?.transacciones[0]?.fuente ||\r\n                                            buscado?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                        />\r\n                    </svg>\r\n                    <div\r\n                        className='buscado'\r\n                        id={buscado?.id}\r\n                        style={{\r\n                            backgroundColor:\r\n                                coloresClaros[\r\n                                    buscado?.transacciones[0]?.fuente ||\r\n                                        buscado?.due√±oActual\r\n                                ],\r\n                            borderColor:\r\n                                colores[\r\n                                    buscado?.transacciones[0]?.fuente ||\r\n                                        buscado?.due√±oActual\r\n                                ],\r\n                        }}\r\n                        onClick={() => props.selectTru(buscado)}\r\n                    ></div>\r\n                    {buscado?.transacciones.length > 0 && (\r\n                        <React.Fragment>\r\n                            <svg className='lineasCortas'>\r\n                                <line\r\n                                    className='linea'\r\n                                    x1='50%'\r\n                                    y1='0'\r\n                                    x2='50%'\r\n                                    y2='50'\r\n                                    style={{\r\n                                        stroke:\r\n                                            colores[\r\n                                                buscado?.transacciones[0]\r\n                                                    ?.fuente\r\n                                            ],\r\n                                    }}\r\n                                />\r\n                            </svg>\r\n                            <div\r\n                                className='transaccion'\r\n                                onClick={() =>\r\n                                    props.selectTransaccion(\r\n                                        buscado?.transacciones[0]\r\n                                    )\r\n                                }\r\n                            ></div>\r\n                        </React.Fragment>\r\n                    )}\r\n                </div>\r\n            )}\r\n            {!existe && (\r\n                <div className='contenedorInstrucciones'>\r\n                    <h2>No se encontro el activo</h2>\r\n                    <h3>\r\n                        Porfavor revise el identificador y vuelva a intentar\r\n                    </h3>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default OrginGraphViz;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Consulta.css';\r\nimport GraphViz from '../GraphViz/GraphViz';\r\nimport OriginGraphViz from '../OriginGraphViz/OriginGraphViz';\r\n\r\nfunction Consulta(props) {\r\n    let consulta = '';\r\n    if (props.tipo === 'id' && props.consulta === 'origen') {\r\n        consulta = `/v1/api/trus/id/${props.buscado}/origen`;\r\n    } else if (props.tipo === 'id' && props.consulta === 'destino') {\r\n        consulta = `/v1/api/trus/id/${props.buscado}/destino`;\r\n    } else if (props.tipo === 'sku' && props.consulta === 'origen') {\r\n        consulta = `/v1/api/actores/${props.actor}/trus/${props.buscado}/origen`;\r\n    } else if (props.tipo === 'sku' && props.consulta === 'destino') {\r\n        consulta = `/v1/api/actores/${props.actor}/trus/${props.buscado}/destino`;\r\n    } else if (props.tipo === 'upc' && props.consulta === 'origen') {\r\n        consulta = `/v1/api/trus/upc/${props.buscado}/origen`;\r\n    } else if (props.tipo === 'upc' && props.consulta === 'destino') {\r\n        consulta = `/v1/api/trus/upc/${props.buscado}/destino`;\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {props.machete && props.consulta === 'destino' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Rastreo del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <GraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                        consulta={consulta}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            {!props.machete && props.consulta === 'destino' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Rastreo del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <GraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                        consulta={consulta}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            {props.machete && props.consulta === 'origen' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Procedencia del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <OriginGraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                        consulta={consulta}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            {!props.machete && props.consulta === 'origen' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Procedencia del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <OriginGraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                        consulta={consulta}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Consulta;\r\n","import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nfunction MapContainer(props) {\r\n    const containerStyle = {\r\n        position: 'relative',\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n    };\r\n\r\n    return (\r\n        <div className='mapDetalle'>\r\n            <Map\r\n                google={props.google}\r\n                zoom={18}\r\n                containerStyle={containerStyle}\r\n                initialCenter={{\r\n                    lat: props.ubicacion.lat,\r\n                    lng: props.ubicacion.lon,\r\n                }}\r\n                center={{\r\n                    lat: props.ubicacion.lat,\r\n                    lng: props.ubicacion.lon,\r\n                }}\r\n            >\r\n                <Marker\r\n                    position={{\r\n                        lat: props.ubicacion.lat,\r\n                        lng: props.ubicacion.lon,\r\n                    }}\r\n                />\r\n            </Map>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDiA9sL22y8i3MfkK4dAffbDrVocFwQQYw',\r\n})(MapContainer);\r\n","import React from 'react';\r\nimport GoogleMap from '../GoogleMap/GoogleMap';\r\n\r\nfunction DetalleTru(props) {\r\n    let handleProcedencia = () => {\r\n        props.setBuscado(props.tru.id);\r\n        props.setConsulta('origen');\r\n        props.updateInput(props.tru.id);\r\n        props.setMachete(!props.machete);\r\n    };\r\n\r\n    let handleRastrear = () => {\r\n        props.setBuscado(props.tru.id);\r\n        props.setConsulta('destino');\r\n        props.updateInput(props.tru.id);\r\n        props.setMachete(!props.machete);\r\n    };\r\n    return (\r\n        <div className='contenedorDetalle'>\r\n            <h3 className='tituloDetalle'>Activo:</h3>\r\n            <h4 className='idDetalleTru'>{props.tru.id}</h4>\r\n            <button className='boton' onClick={handleProcedencia}>\r\n                Consultar Procedencia\r\n            </button>\r\n            <button className='boton' onClick={handleRastrear}>\r\n                Rastrear Activo\r\n            </button>\r\n            {props.tru.SKU && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>SKU:</h5>\r\n                    <p className='valorDetalle'>{props.tru.SKU}</p>\r\n                </React.Fragment>\r\n            )}\r\n            {props.tru.UPC && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>UPC:</h5>\r\n                    <p className='valorDetalle'>{props.tru.UPC}</p>\r\n                </React.Fragment>\r\n            )}\r\n            <h5 className='atributoDetalle'>Consumido:</h5>\r\n            <p className='valorDetalle'>{props.tru.consumido ? 'S√≠' : 'No'}</p>\r\n            {props.tru.consumido && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>√∫ltimo due√±o:</h5>\r\n                    <p className='valorDetalle'>{props.tru.due√±oActual}</p>\r\n                </React.Fragment>\r\n            )}\r\n            {!props.tru.consumido && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>due√±o Actual:</h5>\r\n                    <p className='valorDetalle'>{props.tru?.due√±oActual}</p>\r\n                </React.Fragment>\r\n            )}\r\n            {Object.keys(props.tru.caracteristicas)\r\n                .filter(\r\n                    (caracteristica) =>\r\n                        caracteristica !== 'imagenes' &&\r\n                        caracteristica !== 'videos'\r\n                )\r\n                .map((caracteristica) => (\r\n                    <React.Fragment>\r\n                        <h5 className='atributoDetalle'>{caracteristica}:</h5>\r\n                        <p className='valorDetalle'>\r\n                            {props.tru.caracteristicas[caracteristica]}\r\n                        </p>\r\n                    </React.Fragment>\r\n                ))}\r\n            {props.tru.caracteristicas.imagenes?.map((imagen) => (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>{imagen[0]}:</h5>\r\n                    <img className='imagenDetalle' src={imagen[1]} />\r\n                </React.Fragment>\r\n            ))}\r\n            {props.tru.caracteristicas.videos?.map((video) => (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>{video[0]}:</h5>\r\n                    <iframe className='videoDetalle' src={video[1]} />\r\n                </React.Fragment>\r\n            ))}\r\n            <div className='mapDetalle'>\r\n                <h5 className='atributoDetalle'>Ubicaci√≥n:</h5>\r\n                <GoogleMap ubicacion={props.tru.ubicacion} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetalleTru;\r\n","import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nfunction MapContainer(props) {\r\n    const containerStyle = {\r\n        position: 'relative',\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n    };\r\n\r\n    return (\r\n        <div className='mapDetalle'>\r\n            <Map\r\n                google={props.google}\r\n                zoom={4}\r\n                containerStyle={containerStyle}\r\n                initialCenter={{\r\n                    lat: props.destino.lat,\r\n                    lng: props.destino.lon,\r\n                }}\r\n                center={{\r\n                    lat: props.destino.lat,\r\n                    lng: props.destino.lon,\r\n                }}\r\n            >\r\n                <Marker\r\n                    position={{\r\n                        lat: props.destino.lat,\r\n                        lng: props.destino.lon,\r\n                    }}\r\n                />\r\n                <Marker\r\n                    position={{\r\n                        lat: props.origen.lat,\r\n                        lng: props.origen.lon,\r\n                    }}\r\n                />\r\n            </Map>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDiA9sL22y8i3MfkK4dAffbDrVocFwQQYw',\r\n})(MapContainer);\r\n","import React from 'react';\r\nimport GoogleMap from '../GoogleMapMarkers/GoogleMapMarkers';\r\n\r\nfunction DetalleActividad(props) {\r\n    return (\r\n        <div className='contenedorDetalle'>\r\n            <h3 className='tituloDetalle'>Actividad:</h3>\r\n            <h4 className='idDetalle'>{props.actividad.id}</h4>\r\n            <h5 className='atributoDetalle'>Tipo:</h5>\r\n            <p className='valorDetalle'>{props.actividad.tipo}</p>\r\n            <h5 className='atributoDetalle'>Realizada por:</h5>\r\n            <p className='valorDetalle'>{props.actividad.actor}</p>\r\n            <h5 className='atributoDetalle'>Fecha:</h5>\r\n            <p className='valorDetalle'>{props.actividad.fecha}</p>\r\n            {props.actividad.consume.length > 0 && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>Consumi√≥ los activos:</h5>\r\n                    {props.actividad.consume.map((tru) => (\r\n                        <p className='idTrus'>- {tru.id}</p>\r\n                    ))}\r\n                </React.Fragment>\r\n            )}\r\n            {props.actividad.produce.length > 0 && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>Produjo los activos:</h5>\r\n                    {props.actividad.produce.map((tru) => (\r\n                        <p className='idTrus'>- {tru.id}</p>\r\n                    ))}\r\n                </React.Fragment>\r\n            )}\r\n            {props.actividad.tipo === 'TRANSPORTAR' && (\r\n                <div className='mapDetalle'>\r\n                    <h5 className='atributoDetalle'>Ubicaciones:</h5>\r\n                    <GoogleMap\r\n                        destino={props.actividad.destino}\r\n                        origen={props.actividad.consume[0].ubicacion}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetalleActividad;\r\n","import React from 'react';\r\n\r\nfunction DetalleTransaccion(props) {\r\n    return (\r\n        <div className='contenedorDetalle'>\r\n            <h3 className='tituloDetalle'>Transacci√≥n:</h3>\r\n            <h4 className='idDetalle'>{props.transaccion.id}</h4>\r\n            <h5 className='atributoDetalle'>Fuente:</h5>\r\n            <p className='valorDetalle'>{props.transaccion.fuente}</p>\r\n            <h5 className='atributoDetalle'>Destino:</h5>\r\n            <p className='valorDetalle'>{props.transaccion.destino}</p>\r\n            <h5 className='atributoDetalle'>Se transfirieron los activos:</h5>\r\n            {props.transaccion.trus.map((tru) => (\r\n                <p className='idTrus'>- {tru}</p>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetalleTransaccion;\r\n","import React from 'react';\r\nimport './Detalle.css';\r\nimport DetalleTru from '../DetalleTru/DetalleTru';\r\nimport DetalleActividad from '../DetalleActividad/DetalleActividad';\r\nimport DetalleTransaccion from '../DetalleTransaccion/DetalleTransaccion';\r\n\r\nfunction Detalle(props) {\r\n    return (\r\n        <div>\r\n            {!props.tru && !props.actividad && !props.transaccion && (\r\n                <div className='detalleNada'>\r\n                    Seleccione un nodo para ver m√°s informaci√≥n\r\n                </div>\r\n            )}\r\n            {props.tru && (\r\n                <DetalleTru\r\n                    tru={props.tru}\r\n                    setBuscado={props.setBuscado}\r\n                    setConsulta={props.setConsulta}\r\n                    updateInput={props.updateInput}\r\n                    machete={props.machete}\r\n                    setMachete={props.setMachete}\r\n                />\r\n            )}\r\n            {props.actividad && (\r\n                <DetalleActividad actividad={props.actividad} />\r\n            )}\r\n            {props.transaccion && (\r\n                <DetalleTransaccion transaccion={props.transaccion} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Detalle;\r\n","import React, { useState } from 'react';\r\nimport './Convensiones.css';\r\n\r\nfunction Convensiones() {\r\n    return (\r\n        <div className='contenedorConvensiones'>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='circulo'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Activos</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='rectangulo'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Actividades</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='rombo'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Transacciones</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='propilco'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Propilco</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='cartoflex'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Cartoflex</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='transportador'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Transaportador</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Convensiones;\r\n","import React from 'react';\r\nimport './Flecha.css';\r\n\r\nfunction Flecha() {\r\n    return (\r\n        <div className='contenedorFlecha'>\r\n            <div className='textoEje'>Antiguo</div>\r\n            <div className='tiempo'>Tiempo</div>\r\n            <div className='lineaFlecha'></div>\r\n            <div className='flecha'></div>\r\n            <div className='textoEje'>Reciente</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flecha;\r\n","import React, { useState, useRef } from 'react';\r\nimport './Visualization.css';\r\nimport Header from '../Header/Header';\r\nimport Instrucciones from '../Instrucciones/Instrucciones';\r\nimport Consulta from '../Consulta/Consulta';\r\nimport Detalle from '../Detalle/Detalle';\r\nimport Convenciones from '../Convenciones/Convensiones';\r\nimport Flecha from '../Flecha/Flecha';\r\n\r\nfunction Visualization() {\r\n    let [buscado, setBuscado] = useState(undefined);\r\n    let [tipo, setTipo] = useState('id');\r\n    let [actor, setActor] = useState('');\r\n    let [consulta, setConsulta] = useState('');\r\n    let [tru, setTru] = useState(undefined);\r\n    let [actividad, setActividad] = useState(undefined);\r\n    let [transaccion, setTransaccion] = useState(undefined);\r\n    let [machete, setMachete] = useState(false);\r\n    let inputRef = useRef();\r\n\r\n    let selectTru = (tru) => {\r\n        setTru(tru);\r\n        setActividad(undefined);\r\n        setTransaccion(undefined);\r\n    };\r\n\r\n    let selectActividad = (actividad) => {\r\n        setTru(undefined);\r\n        setActividad(actividad);\r\n        setTransaccion(undefined);\r\n    };\r\n\r\n    let selectTransaccion = (transaccion) => {\r\n        setTru(undefined);\r\n        setActividad(undefined);\r\n        setTransaccion(transaccion);\r\n    };\r\n\r\n    let updateInput = (text) => {\r\n        inputRef.current.value = text;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <Header\r\n                setBuscado={setBuscado}\r\n                setConsulta={setConsulta}\r\n                inputRef={inputRef}\r\n                machete={machete}\r\n                setMachete={setMachete}\r\n                setTipo={setTipo}\r\n                setActor={setActor}\r\n            />\r\n            <div className='contenedor'>\r\n                <div id='contenedorViz' className='contenedorViz'>\r\n                    <div className='subContenedorViz'>\r\n                        {buscado && (\r\n                            <React.Fragment>\r\n                                <Flecha />\r\n                                <Convenciones />\r\n                                <Consulta\r\n                                    buscado={buscado}\r\n                                    consulta={consulta}\r\n                                    selectTru={selectTru}\r\n                                    selectActividad={selectActividad}\r\n                                    selectTransaccion={selectTransaccion}\r\n                                    machete={machete}\r\n                                    tipo={tipo}\r\n                                    actor={actor}\r\n                                />\r\n                            </React.Fragment>\r\n                        )}\r\n                        {!buscado && <Instrucciones />}\r\n                    </div>\r\n                </div>\r\n                <div className='contenedorMenu'>\r\n                    <Detalle\r\n                        tru={tru}\r\n                        actividad={actividad}\r\n                        transaccion={transaccion}\r\n                        setBuscado={setBuscado}\r\n                        setConsulta={setConsulta}\r\n                        updateInput={updateInput}\r\n                        machete={machete}\r\n                        setMachete={setMachete}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Visualization;\r\n","import React from 'react';\r\nimport './CrearTransaccion.css';\r\nimport { useState } from 'react';\r\n\r\nfunction CrearTransaccion() {\r\n    let [trus, setTrus] = useState([]);\r\n    let [esperando, setEsperando] = useState(false);\r\n\r\n    let crearTransaccion = () => {\r\n        let request = {\r\n            fuente: 'Cartoflex',\r\n            destino: document.getElementById('inputActor').value,\r\n            fecha: new Date().toISOString(),\r\n            trus: [],\r\n        };\r\n        let completo = true;\r\n        for (let i in trus) {\r\n            let tru = document.getElementById('TRU-' + i).value;\r\n            if (tru !== '') {\r\n                request.trus.push(tru);\r\n            } else {\r\n                completo = false;\r\n            }\r\n        }\r\n        if (completo) {\r\n            setEsperando(true);\r\n            fetch('/v1/api/transaccion', {\r\n                method: 'POST',\r\n                body: JSON.stringify(request),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((response) => {\r\n                response.json().then((data) => {\r\n                    if (data.error) {\r\n                        alert(\r\n                            data.error.replace(\r\n                                'error in simulation: transaction returned with failure: ',\r\n                                ''\r\n                            )\r\n                        );\r\n                    } else {\r\n                        console.log(data);\r\n                        alert(data.msg);\r\n                    }\r\n                    setEsperando(false);\r\n                    setTrus([]);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>\r\n                Agregue el nombre del actor con el cual va a registrar la\r\n                transaccion y los TRUs involucrados en la transacci√≥n.\r\n            </h3>\r\n            <div className='izquierdaCartoflex'>\r\n                <label>Destinatario: </label>\r\n                <select id='inputActor' name='Actor'>\r\n                    <option value='Transportador'>Transportador</option>\r\n                    <option value='Canvan'>Canvan</option>\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <label>TRUs invlucrados:</label>\r\n                <br />\r\n                {trus.map((tru, i) => (\r\n                    <input\r\n                        id={'TRU-' + i}\r\n                        type='text'\r\n                        className='cartoflexInput'\r\n                    />\r\n                ))}\r\n                <button\r\n                    className='botonCartoflex'\r\n                    onClick={() => setTrus([...trus, {}])}\r\n                    disabled={esperando}\r\n                >\r\n                    Agregar Tru\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button\r\n                    className='botonCartoflexLargo'\r\n                    onClick={crearTransaccion}\r\n                    disabled={esperando}\r\n                >\r\n                    Crear Transacci√≥n\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CrearTransaccion;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './CrearTransformacion.css';\r\n\r\nfunction CrearTransformacion() {\r\n    let [consumidos, setConsumidos] = useState([]);\r\n    let [producidos, setProducidos] = useState([]);\r\n    let [esperando, setEsperando] = useState(false);\r\n\r\n    let crearTransformacion = () => {\r\n        let trusConsumidos = [];\r\n        let trusProducidos = [];\r\n        let completo = true;\r\n        for (let i in consumidos) {\r\n            let tru = document.getElementById('TRU-CONSUMIDO-' + i).value;\r\n            if (tru !== '') {\r\n                trusConsumidos.push(tru);\r\n            } else {\r\n                completo = false;\r\n            }\r\n        }\r\n        for (let i in producidos) {\r\n            if (\r\n                document.getElementById('sku-' + i).value !== '' &&\r\n                document.getElementById('upc-' + i).value !== '' &&\r\n                document.getElementById('referencia-' + i).value !== '' &&\r\n                document.getElementById('cantidad-' + i).value !== '' &&\r\n                document.getElementById('cliente-' + i).value !== '' &&\r\n                document.getElementById('dimensiones-' + i).value !== '' &&\r\n                document.getElementById('producto-' + i).value !== ''\r\n            ) {\r\n                let tru = { ...producidos[i] };\r\n                tru.SKU = document.getElementById('sku-' + i).value;\r\n                tru.UPC = document.getElementById('upc-' + i).value;\r\n                let caracteristicas = {};\r\n                caracteristicas.referencia = document.getElementById(\r\n                    'referencia-' + i\r\n                ).value;\r\n                caracteristicas.cantidad =\r\n                    document.getElementById('cantidad-' + i).value + 'kg';\r\n                caracteristicas.cliente = document.getElementById(\r\n                    'cliente-' + i\r\n                ).value;\r\n                caracteristicas.dimensiones = document.getElementById(\r\n                    'dimensiones-' + i\r\n                ).value;\r\n                caracteristicas.producto = document.getElementById(\r\n                    'producto-' + i\r\n                ).value;\r\n                tru.caracteristicas = caracteristicas;\r\n                trusProducidos.push(tru);\r\n            } else {\r\n                completo = false;\r\n            }\r\n        }\r\n        if (completo) {\r\n            let request = {\r\n                trus_consumidos: trusConsumidos,\r\n                trus_producidos: trusProducidos,\r\n                actor: 'Cartoflex',\r\n            };\r\n            setEsperando(true);\r\n            fetch('v1/api/actividad/transformar', {\r\n                method: 'POST',\r\n                body: JSON.stringify(request),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }).then((response) => {\r\n                response.json().then((data) => {\r\n                    if (data.error) {\r\n                        alert(\r\n                            data.error.replace(\r\n                                'error in simulation: transaction returned with failure: ',\r\n                                ''\r\n                            )\r\n                        );\r\n                    } else {\r\n                        alert(data.msg);\r\n                        setConsumidos([]);\r\n                        setProducidos([]);\r\n                    }\r\n                    setEsperando(false);\r\n                });\r\n            });\r\n        } else {\r\n            alert(\r\n                'La informaci√≥n no es suficiente para crear una transformaci√≥n'\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <h3>\r\n                Agregue los IDs de los TRUs que consumi√≥ en su transformaci√≥n, y\r\n                las caracteristicas de los TRUs producidos.\r\n            </h3>\r\n            <div className='izquierdaCartoflex'>\r\n                <label>TRUs consumidos:</label>\r\n                <br />\r\n                {consumidos.map((tru, i) => (\r\n                    <input\r\n                        id={'TRU-CONSUMIDO-' + i}\r\n                        type='text'\r\n                        className='cartoflexInput'\r\n                    />\r\n                ))}\r\n                <button\r\n                    className='botonCartoflex'\r\n                    onClick={() => setConsumidos([...consumidos, {}])}\r\n                    disabled={esperando}\r\n                >\r\n                    Agregar TRU Consumido\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <label>TRUs producidos:</label>\r\n                <br />\r\n                {producidos.map((tru, i) => (\r\n                    <React.Fragment>\r\n                        <br />\r\n                        <div className='lineaCartoflex'></div>\r\n                        <br />\r\n                        <label>SKU: </label>\r\n                        <input\r\n                            id={'sku-' + i}\r\n                            className='cartoflexInput'\r\n                            type='text'\r\n                        />\r\n                        <label>UPC: </label>\r\n                        <input\r\n                            id={'upc-' + i}\r\n                            className='cartoflexInput'\r\n                            type='text'\r\n                        />\r\n                        <label>Referencia: </label>\r\n                        <input\r\n                            id={'referencia-' + i}\r\n                            className='cartoflexInput'\r\n                            type='number'\r\n                        />\r\n                        <label>Cantidad: </label>\r\n                        <input\r\n                            id={'cantidad-' + i}\r\n                            className='cartoflexInput'\r\n                            type='number'\r\n                        />\r\n                        <label>Cliente: </label>\r\n                        <input\r\n                            id={'cliente-' + i}\r\n                            className='cartoflexInput'\r\n                            type='number'\r\n                        />\r\n                        <label>Dimensiones: </label>\r\n                        <input\r\n                            id={'dimensiones-' + i}\r\n                            className='cartoflexInput'\r\n                            type='number'\r\n                        />\r\n                        <label>Producto: </label>\r\n                        <input\r\n                            id={'producto-' + i}\r\n                            className='cartoflexInput'\r\n                            type='number'\r\n                        />\r\n                        <br />\r\n                    </React.Fragment>\r\n                ))}\r\n                <button\r\n                    className='botonCartoflex'\r\n                    onClick={() => setProducidos([...producidos, {}])}\r\n                    disabled={esperando}\r\n                >\r\n                    Agregar TRU Producido\r\n                </button>\r\n                <br />\r\n                <br />\r\n                <button\r\n                    className='botonCartoflexLargo'\r\n                    onClick={crearTransformacion}\r\n                    disabled={esperando}\r\n                >\r\n                    Agregar Transformaci√≥n\r\n                </button>\r\n                <br />\r\n                <br />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CrearTransformacion;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './Cartoflex.css';\r\nimport CrearTransaccion from '../CrearTransaccion/CrearTransaccion';\r\n\r\nimport CrearTransformacion from '../CrearTransformacion/CrearTransformacion';\r\nfunction Cartoflex() {\r\n    let [opcion, setOpcion] = useState('');\r\n    let irAViz = () => {\r\n        window.location = '/visualization';\r\n    };\r\n    return (\r\n        <div className='contenedorPropilco'>\r\n            <h1>Registro de Transformaci√≥n Cartoflex</h1>\r\n            <button\r\n                className='botonGris'\r\n                onClick={() => setOpcion('transformacion')}\r\n            >\r\n                Crear Transformaci√≥n\r\n            </button>\r\n            <button\r\n                className='botonGris'\r\n                onClick={() => setOpcion('transaccion')}\r\n            >\r\n                Crear Transacci√≥n\r\n            </button>\r\n            <button className='botonGris' onClick={irAViz}>\r\n                Visualizar Cadena\r\n            </button>\r\n            {opcion === 'transformacion' && <CrearTransformacion />}\r\n            {opcion === 'transaccion' && <CrearTransaccion />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cartoflex;\r\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Visualization from './components/Visualization/Visualization';\nimport Cartoflex from './components/Cartoflex/Cartoflex';\n\nfunction App() {\n    return (\n        <Switch>\n            <Route exact path='/' render={() => <Cartoflex />} />\n            <Route\n                exact\n                path='/visualization'\n                render={() => <Visualization />}\n            />\n        </Switch>\n    );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router history={history}>\n            <App history={history} />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}