{"version":3,"sources":["components/Header/Header.jsx","components/Instrucciones/Instrucciones.jsx","components/Grupo/Grupo.jsx","components/GraphViz/GraphViz.jsx","components/OriginGrupo/OriginGrupo.jsx","components/OriginGraphViz/OriginGraphViz.jsx","components/Consulta/Consulta.jsx","components/GoogleMap/GoogleMap.jsx","components/DetalleTru/DetalleTru.jsx","components/GoogleMapMarkers/GoogleMapMarkers.jsx","components/DetalleActividad/DetalleActividad.jsx","components/DetalleTransaccion/DetalleTransaccion.jsx","components/Detalle/Detalle.jsx","components/Convenciones/Convensiones.jsx","components/Flecha/Flecha.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","useState","actorActivo","setActorActivo","idRef","useRef","actorRef","className","ref","onChange","current","value","disabled","type","placeholder","inputRef","onClick","setBuscado","setConsulta","setMachete","machete","undefined","Instrucciones","Grupo","actividad","setActividad","grupos","setGrupos","lines","setLines","lines2","setLines2","calculateXCoordinate","tru","element","document","getElementById","id","parent","parentElement","parentOffset","getBoundingClientRect","left","renderLines","newLines","produce","map","i","key","x1","y1","x2","y2","style","stroke","colores","transacciones","fuente","due√±oActual","renderLines2","grupo","actor","handleActualizar","handleactualizar","useEffect","newActividad","actividades","find","act","consumidoPor","newGrupos","truAct","siguiente","push","Object","values","backgroundColor","coloresClaros","borderColor","selectTru","trans","Fragment","selectTransaccion","selectActividad","tipo","GraphViz","existe","setExiste","buscado","setActividades","actualizar","setActualizar","Propilco","Cartoflex","Transportador","Canvan","handleResize","window","addEventListener","fetch","then","response","json","data","error","reverse","length","destino","OriginGrupo","siguienteActividad","setSiguienteActividad","x","includes","consume","indice","OrginGraphViz","scrollTo","top","body","scrollHeight","behavior","Consulta","consulta","GoogleApiWrapper","apiKey","google","zoom","containerStyle","position","width","height","initialCenter","lat","ubicacion","lng","lon","center","DetalleTru","updateInput","SKU","UPC","consumido","keys","caracteristicas","filter","caracteristica","imagenes","imagen","src","videos","video","GoogleMap","origen","DetalleActividad","fecha","DetalleTransaccion","transaccion","trus","Detalle","Convensiones","Flecha","App","setTru","setTransaccion","text","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3fc39191.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction Header(props) {\r\n    let [actorActivo, setActorActivo] = useState(true);\r\n    let idRef = useRef();\r\n    let actorRef = useRef();\r\n\r\n    let handleChange = () => {\r\n        if (idRef.current.value === 'SKU') {\r\n            setActorActivo(false);\r\n        } else {\r\n            setActorActivo(true);\r\n        }\r\n    };\r\n\r\n    let handleRastrear = () => {\r\n        if (props.inputRef.current.value !== '') {\r\n            props.setBuscado(props.inputRef.current.value);\r\n            props.setConsulta('destino');\r\n            props.setMachete(!props.machete);\r\n        } else {\r\n            props.setBuscado(undefined);\r\n            props.setConsulta('');\r\n        }\r\n    };\r\n\r\n    let handleProcedencia = () => {\r\n        if (props.inputRef.current.value !== '') {\r\n            props.setBuscado(props.inputRef.current.value);\r\n            props.setConsulta('origen');\r\n            props.setMachete(!props.machete);\r\n        } else {\r\n            props.setBuscado(undefined);\r\n            props.setConsulta('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='header'>\r\n            <label className='labelHeader'>Buscar por:</label>\r\n            <select\r\n                className='selectIdentificador'\r\n                ref={idRef}\r\n                onChange={handleChange}\r\n            >\r\n                <option value='ID TRU'>ID TRU</option>\r\n                <option value='SKU'>SKU</option>\r\n                <option value='UPC'>UPC</option>\r\n            </select>\r\n            <select\r\n                className='selectActor'\r\n                ref={actorRef}\r\n                disabled={actorActivo}\r\n            >\r\n                <option>Propilco</option>\r\n                <option>Cartoflex</option>\r\n                <option>Transportador</option>\r\n                <option>Canvan</option>\r\n            </select>\r\n            <input\r\n                type='text'\r\n                placeholder='Identificador del activo'\r\n                className='inputBuscar'\r\n                ref={props.inputRef}\r\n            />\r\n            <div className='contenedorBotones'>\r\n                <button className='boton' onClick={handleProcedencia}>\r\n                    Consultar Procedencia\r\n                </button>\r\n                <button className='boton' onClick={handleRastrear}>\r\n                    Rastrear Activo\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Instrucciones.css';\r\n\r\nfunction Instrucciones() {\r\n    return (\r\n        <div className='contenedorInstrucciones'>\r\n            <h1>Bienvenido al Sistema de Seguimiento Blockchain</h1>\r\n            <br />\r\n            <div className='contenedorPasos'>\r\n                <h3>\r\n                    Para consultar un activo en de la cadena de suministro siga\r\n                    los siguientes pasos:\r\n                </h3>\r\n                <ul>\r\n                    <li>\r\n                        Escoga el metodo de busqueda del activo (ID, SKU, o UPC)\r\n                    </li>\r\n                    <li>Si escogio SKU, escoja el actor que expidi√≥ el SKU</li>\r\n                    <li>\r\n                        Ingrese el identificador √∫nico del activo que desea\r\n                        consultar\r\n                    </li>\r\n                    <li>\r\n                        Oprima el boton correspondiente a la consulta que desea\r\n                        realizar\r\n                    </li>\r\n                    <br />\r\n                    <ul>\r\n                        <li>\r\n                            <b>Consultar Procedencia:</b> Esta consulta muestra\r\n                            el historial de todo lo que pas√≥ en la cadena de\r\n                            suministro para lograr producir el activo que\r\n                            consult√≥\r\n                        </li>\r\n                        <li>\r\n                            <b>Rastrear activo:</b> Esta consulta muestra todo\r\n                            lo que paso con un activo desde que fue registrado\r\n                            con el identificador unico\r\n                        </li>\r\n                    </ul>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Instrucciones;\r\n","import React from 'react';\r\nimport './Grupo.css';\r\nimport './Trus.css';\r\nimport './Actividades.css';\r\nimport './Lineas.css';\r\nimport './Transacciones.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Grupo(props) {\r\n    let [actividad, setActividad] = useState(undefined);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [lines2, setLines2] = useState(<div></div>);\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let element = document.getElementById(tru.id);\r\n        let parent = element?.parentElement.parentElement.parentElement;\r\n        let parentOffset = parent?.getBoundingClientRect().left;\r\n        let x = element?.getBoundingClientRect().left + 12 - parentOffset;\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = actividad?.produce.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke:\r\n                            props.colores[\r\n                                tru?.transacciones[0]?.fuente ||\r\n                                    tru?.due√±oActual\r\n                            ],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n    let renderLines2 = () => {\r\n        let newLines = props.grupo.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1={calculateXCoordinate(tru)}\r\n                    y1='0'\r\n                    x2='50%'\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: props.colores[actividad?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines2(newLines);\r\n    };\r\n\r\n    let handleActualizar = () => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    };\r\n\r\n    useEffect(() => {\r\n        let newActividad = props.actividades.find(\r\n            (act) => act.id === props.grupo[0].consumidoPor\r\n        );\r\n\r\n        let newGrupos = {};\r\n        for (let i in newActividad?.produce) {\r\n            let truAct = newActividad?.produce[i];\r\n            let siguiente = truAct.consumidoPor || truAct.id;\r\n            if (newGrupos[siguiente]) {\r\n                newGrupos[siguiente].push(truAct);\r\n            } else {\r\n                newGrupos[siguiente] = [truAct];\r\n            }\r\n        }\r\n        setGrupos(Object.values(newGrupos));\r\n        setActividad(newActividad);\r\n        /**\r\n    let newGrupo = [...props.grupo];\r\n    for (let i in newGrupo) {\r\n      newGrupo[i].x =\r\n        document.getElementById(newGrupo[i].id).getBoundingClientRect().left +\r\n        12;\r\n    }*/\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    }, [grupos]);\r\n\r\n    return (\r\n        <div className='contenedorGrupo'>\r\n            {props.grupo.map((tru) => {\r\n                return (\r\n                    <div className='contenedorTru'>\r\n                        <div\r\n                            className='tru'\r\n                            id={tru.id}\r\n                            style={{\r\n                                backgroundColor:\r\n                                    props.coloresClaros[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                                borderColor:\r\n                                    props.colores[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                            onClick={() => props.selectTru(tru)}\r\n                        ></div>\r\n                        {tru?.transacciones.map((trans, i) => (\r\n                            <React.Fragment>\r\n                                <svg className='lineasCortas'>\r\n                                    <line\r\n                                        key={i}\r\n                                        className='linea'\r\n                                        x1='50%'\r\n                                        y1='0'\r\n                                        x2='50%'\r\n                                        y2='50'\r\n                                        style={{\r\n                                            stroke: props.colores[trans.fuente],\r\n                                        }}\r\n                                    />\r\n                                </svg>\r\n                                <div\r\n                                    className='transaccion'\r\n                                    onClick={() =>\r\n                                        props.selectTransaccion(trans)\r\n                                    }\r\n                                ></div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                );\r\n            })}\r\n            {actividad && (\r\n                <React.Fragment>\r\n                    <svg className='lineas'>{lines2}</svg>\r\n                    <div\r\n                        id={actividad.id}\r\n                        className='actividad'\r\n                        style={{\r\n                            backgroundColor:\r\n                                props.coloresClaros[actividad?.actor],\r\n                            borderColor: props.colores[actividad?.actor],\r\n                        }}\r\n                        onClick={() => props.selectActividad(actividad)}\r\n                    >\r\n                        {actividad.tipo}\r\n                    </div>\r\n                    <svg className='lineas'>{lines}</svg>\r\n                </React.Fragment>\r\n            )}\r\n            <div className='contenedorGrupos'>\r\n                {grupos.map((grupo) => (\r\n                    <Grupo\r\n                        grupo={grupo}\r\n                        handleactualizar={handleActualizar}\r\n                        actividades={props.actividades}\r\n                        colores={props.colores}\r\n                        coloresClaros={props.coloresClaros}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Grupo;\r\n","import React from 'react';\r\nimport './GraphViz.css';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Grupo from '../Grupo/Grupo';\r\n\r\nfunction GraphViz(props) {\r\n    let [existe, setExiste] = useState(true);\r\n    let [buscado, setBuscado] = useState(undefined);\r\n    let [actividades, setActividades] = useState([]);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [actualizar, setActualizar] = useState(false);\r\n\r\n    let colores = {\r\n        Propilco: 'rgb(12, 124, 186)',\r\n        Cartoflex: 'rgb(122, 182, 72)',\r\n        Transportador: 'rgb(128, 0, 255)',\r\n        Canvan: 'rgb(255, 128, 0)',\r\n    };\r\n\r\n    let coloresClaros = {\r\n        Propilco: 'rgb(12, 124, 186, 0.2)',\r\n        Cartoflex: 'rgb(122, 182, 72, 0.2)',\r\n        Transportador: 'rgb(128, 0, 255, 0.2)',\r\n        Canvan: 'rgb(255, 128, 0, 0.2)',\r\n    };\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let x =\r\n            document.getElementById(tru.id)?.getBoundingClientRect().left + 5;\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = actividades[0]?.produce.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: colores[actividades[0]?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n\r\n    let handleResize = () => {\r\n        //hacer algo para que se vuelva a renderizar el grafo\r\n        renderLines();\r\n    };\r\n\r\n    let handleactualizar = () => {\r\n        renderLines();\r\n        setActualizar(!actualizar);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(`/v1/api/trus/id/${props.buscado}/destino`).then((response) => {\r\n            response.json().then((data) => {\r\n                if (!data.error) {\r\n                    setExiste(true);\r\n                    data.actividades.reverse();\r\n                    let newGrupos = {};\r\n                    for (let i in data.actividades[0]?.produce) {\r\n                        let truAct = data.actividades[0]?.produce[i];\r\n                        let siguiente = truAct.consumidoPor || truAct.id;\r\n                        if (newGrupos[siguiente]) {\r\n                            newGrupos[siguiente].push(truAct);\r\n                        } else {\r\n                            newGrupos[siguiente] = [truAct];\r\n                        }\r\n                    }\r\n                    setActividades(data.actividades);\r\n                    setBuscado(data.tru);\r\n                    setGrupos(Object.values(newGrupos));\r\n                } else {\r\n                    setExiste(false);\r\n                }\r\n            });\r\n        });\r\n    }, [props.buscado]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {existe && (\r\n                <div>\r\n                    <div className='contenedorBuscado'>\r\n                        <div\r\n                            className='buscado'\r\n                            style={{\r\n                                backgroundColor:\r\n                                    coloresClaros[\r\n                                        buscado?.transacciones[0]?.fuente ||\r\n                                            buscado?.due√±oActual\r\n                                    ],\r\n                                borderColor:\r\n                                    colores[\r\n                                        buscado?.transacciones[0]?.fuente ||\r\n                                            buscado?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                            onClick={() => props.selectTru(buscado)}\r\n                        ></div>\r\n                    </div>\r\n                    <svg className='lineas'>\r\n                        <line\r\n                            className='linea'\r\n                            x1='50%'\r\n                            y1='0'\r\n                            x2='50%'\r\n                            y2='50'\r\n                            style={{\r\n                                stroke:\r\n                                    colores[\r\n                                        buscado?.transacciones[0]?.fuente ||\r\n                                            buscado?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                        />\r\n                    </svg>\r\n                    {buscado?.transacciones.map((trans, i) => (\r\n                        <React.Fragment>\r\n                            <div\r\n                                className='transaccionBase'\r\n                                onClick={() => props.selectTransaccion(trans)}\r\n                            ></div>\r\n                            {actividades.length > 0 && (\r\n                                <svg className='lineasCortas'>\r\n                                    <line\r\n                                        key={i}\r\n                                        className='linea'\r\n                                        x1='50%'\r\n                                        y1='0'\r\n                                        x2='50%'\r\n                                        y2='50'\r\n                                        style={{\r\n                                            stroke: colores[trans.destino],\r\n                                        }}\r\n                                    />\r\n                                </svg>\r\n                            )}\r\n                        </React.Fragment>\r\n                    ))}\r\n                    {actividades.length > 0 && (\r\n                        <div\r\n                            className='firstActivity'\r\n                            id={actividades[0]?.id}\r\n                            style={{\r\n                                backgroundColor:\r\n                                    coloresClaros[actividades[0]?.actor],\r\n                                borderColor: colores[actividades[0]?.actor],\r\n                            }}\r\n                            onClick={() =>\r\n                                props.selectActividad(actividades[0])\r\n                            }\r\n                        >\r\n                            {actividades[0]?.tipo}\r\n                        </div>\r\n                    )}\r\n                    <svg className='lineas'>{lines}</svg>\r\n                    <div className='contenedorGrupos'>\r\n                        <div className='contenedorPrimerGrupo'>\r\n                            {grupos.map((grupo) => (\r\n                                <Grupo\r\n                                    grupo={grupo}\r\n                                    actualizar={actualizar}\r\n                                    handleactualizar={handleactualizar}\r\n                                    actividades={actividades}\r\n                                    colores={colores}\r\n                                    coloresClaros={coloresClaros}\r\n                                    selectTru={props.selectTru}\r\n                                    selectActividad={props.selectActividad}\r\n                                    selectTransaccion={props.selectTransaccion}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {!existe && (\r\n                <div className='contenedorInstrucciones'>\r\n                    <h2>No se encontro el activo</h2>\r\n                    <h3>\r\n                        Porfavor revise el identificador y vuelva a intentar\r\n                    </h3>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default GraphViz;\r\n","import React from 'react';\r\nimport './OriginGrupo.css';\r\nimport './Trus.css';\r\nimport './Actividades.css';\r\nimport './Lineas.css';\r\nimport './Transacciones.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nfunction OriginGrupo(props) {\r\n    let [actividad, setActividad] = useState(undefined);\r\n    let [siguienteActividad, setSiguienteActividad] = useState(undefined);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [lines2, setLines2] = useState(<div></div>);\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let element = document.getElementById(tru.id);\r\n        let parent = element?.parentElement.parentElement.parentElement;\r\n        let parentOffset = parent?.getBoundingClientRect().left;\r\n        let x = element?.getBoundingClientRect().left + 12 - parentOffset;\r\n        if (props.buscado.id.includes('47b2c630-7422-11ea-9dba-a31d6f3c8f24')) {\r\n            x = element?.getBoundingClientRect().left + 92.5 - parentOffset;\r\n        }\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = siguienteActividad?.consume.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke:\r\n                            props.colores[\r\n                                tru?.transacciones[0]?.fuente ||\r\n                                    tru?.due√±oActual\r\n                            ],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n    let renderLines2 = () => {\r\n        let newActividad = props.actividades.find((act, i) => {\r\n            return act.id === props.grupo[0].consumidoPor;\r\n        });\r\n        let newLines = props.grupo.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1={calculateXCoordinate(tru)}\r\n                    y1='0'\r\n                    x2='50%'\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: props.colores[newActividad?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines2(newLines);\r\n    };\r\n\r\n    let handleActualizar = () => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    };\r\n\r\n    useEffect(() => {\r\n        let indice = 0;\r\n        let newActividad = props.actividades.find((act, i) => {\r\n            indice = i;\r\n            return act.id === props.grupo[0].consumidoPor;\r\n        });\r\n        let siguienteActividad = props.actividades[indice + 1];\r\n\r\n        if (siguienteActividad) {\r\n            let newGrupos = {};\r\n            for (let i in siguienteActividad?.consume) {\r\n                let truAct = siguienteActividad?.consume[i];\r\n                let siguiente = truAct.consumidoPor || truAct.id;\r\n                if (newGrupos[siguiente]) {\r\n                    newGrupos[siguiente].push(truAct);\r\n                } else {\r\n                    newGrupos[siguiente] = [truAct];\r\n                }\r\n            }\r\n            setGrupos(Object.values(newGrupos));\r\n        }\r\n        setSiguienteActividad(siguienteActividad);\r\n        setActividad(newActividad);\r\n        /**\r\n    let newGrupo = [...props.grupo];\r\n    for (let i in newGrupo) {\r\n      newGrupo[i].x =\r\n        document.getElementById(newGrupo[i].id).getBoundingClientRect().left +\r\n        12;\r\n    }*/\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.handleactualizar({});\r\n        renderLines();\r\n        renderLines2();\r\n    }, [grupos]);\r\n\r\n    return (\r\n        <div className='contenedorGrupo'>\r\n            {props.grupo.map((tru) => {\r\n                return (\r\n                    <div className='contenedorTru'>\r\n                        <div\r\n                            className='tru'\r\n                            id={tru.id}\r\n                            style={{\r\n                                backgroundColor:\r\n                                    props.coloresClaros[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                                borderColor:\r\n                                    props.colores[\r\n                                        tru?.transacciones[0]?.fuente ||\r\n                                            tru?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                            onClick={() => props.selectTru(tru)}\r\n                        ></div>\r\n                        {tru?.transacciones.map((trans, i) => (\r\n                            <React.Fragment>\r\n                                <svg className='lineasCortas'>\r\n                                    <line\r\n                                        key={i}\r\n                                        className='linea'\r\n                                        x1='50%'\r\n                                        y1='0'\r\n                                        x2='50%'\r\n                                        y2='50'\r\n                                        style={{\r\n                                            stroke: props.colores[trans.fuente],\r\n                                        }}\r\n                                    />\r\n                                </svg>\r\n                                <div\r\n                                    className='transaccion'\r\n                                    onClick={() =>\r\n                                        props.selectTransaccion(trans)\r\n                                    }\r\n                                ></div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                );\r\n            })}\r\n            {actividad && (\r\n                <React.Fragment>\r\n                    <svg className='lineas'>{lines2}</svg>\r\n                    <div\r\n                        id={actividad.id}\r\n                        className='actividad'\r\n                        style={{\r\n                            backgroundColor:\r\n                                props.coloresClaros[actividad?.actor],\r\n                            borderColor: props.colores[actividad?.actor],\r\n                        }}\r\n                        onClick={() => props.selectActividad(actividad)}\r\n                    >\r\n                        {actividad.tipo}\r\n                    </div>\r\n                    {siguienteActividad && (\r\n                        <svg className='lineas'>{lines}</svg>\r\n                    )}\r\n                </React.Fragment>\r\n            )}\r\n            <div className='contenedorGrupos'>\r\n                {grupos.map((grupo) => (\r\n                    <OriginGrupo\r\n                        buscado={props.buscado}\r\n                        grupo={grupo}\r\n                        handleactualizar={handleActualizar}\r\n                        actividades={props.actividades}\r\n                        colores={props.colores}\r\n                        coloresClaros={props.coloresClaros}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OriginGrupo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport OriginGrupo from '../OriginGrupo/OriginGrupo';\r\nimport '../OriginGraphViz/OriginGraphViz.css';\r\n\r\nfunction OrginGraphViz(props) {\r\n    let [existe, setExiste] = useState(true);\r\n    let [buscado, setBuscado] = useState(undefined);\r\n    let [actividades, setActividades] = useState([]);\r\n    let [grupos, setGrupos] = useState([]);\r\n    let [lines, setLines] = useState(<div></div>);\r\n    let [actualizar, setActualizar] = useState(false);\r\n\r\n    let colores = {\r\n        Propilco: 'rgb(12, 124, 186)',\r\n        Cartoflex: 'rgb(122, 182, 72)',\r\n        Transportador: 'rgb(128, 0, 255)',\r\n        Canvan: 'rgb(255, 128, 0)',\r\n    };\r\n\r\n    let coloresClaros = {\r\n        Propilco: 'rgb(12, 124, 186, 0.2)',\r\n        Cartoflex: 'rgb(122, 182, 72, 0.2)',\r\n        Transportador: 'rgb(128, 0, 255, 0.2)',\r\n        Canvan: 'rgb(255, 128, 0, 0.2)',\r\n    };\r\n\r\n    let calculateXCoordinate = (tru) => {\r\n        let x =\r\n            document.getElementById(tru.id)?.getBoundingClientRect().left + 5;\r\n        return x;\r\n    };\r\n\r\n    let renderLines = () => {\r\n        let newLines = actividades[1]?.consume.map((tru, i) => {\r\n            return (\r\n                <line\r\n                    key={i}\r\n                    className='linea'\r\n                    x1='50%'\r\n                    y1='0'\r\n                    x2={calculateXCoordinate(tru)}\r\n                    y2='50'\r\n                    style={{\r\n                        stroke: colores[actividades[0]?.actor],\r\n                    }}\r\n                />\r\n            );\r\n        });\r\n        setLines(newLines);\r\n    };\r\n\r\n    let handleResize = () => {\r\n        //hacer algo para que se vuelva a renderizar el grafo\r\n        renderLines();\r\n    };\r\n\r\n    let handleactualizar = () => {\r\n        renderLines();\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`/v1/api/trus/id/${props.buscado}/origen`).then((response) => {\r\n            response.json().then((data) => {\r\n                if (!data.error) {\r\n                    setExiste(true);\r\n                    let newGrupos = {};\r\n                    for (let i in data.actividades[1]?.consume) {\r\n                        let truAct = data.actividades[1]?.consume[i];\r\n                        let siguiente = truAct.consumidoPor || truAct.id;\r\n                        if (newGrupos[siguiente]) {\r\n                            newGrupos[siguiente].push(truAct);\r\n                        } else {\r\n                            newGrupos[siguiente] = [truAct];\r\n                        }\r\n                    }\r\n                    setActividades(data.actividades);\r\n                    setBuscado(data.tru);\r\n                    setGrupos(Object.values(newGrupos));\r\n                } else {\r\n                    setExiste(false);\r\n                }\r\n            });\r\n        });\r\n    }, [props.buscado]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    useEffect(() => {\r\n        let contenedor = document.getElementById('contenedorViz');\r\n        contenedor.scrollTo({\r\n            top: document.body.scrollHeight,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }, [lines]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {existe && (\r\n                <div>\r\n                    <div\r\n                        className='firstActivity'\r\n                        id={actividades[0]?.id}\r\n                        style={{\r\n                            backgroundColor:\r\n                                coloresClaros[actividades[0]?.actor],\r\n                            borderColor: colores[actividades[0]?.actor],\r\n                        }}\r\n                        onClick={() => props.selectActividad(actividades[0])}\r\n                    >\r\n                        {actividades[0]?.tipo}\r\n                    </div>\r\n                    {actividades.length > 1 && (\r\n                        <svg className='lineas'>{lines}</svg>\r\n                    )}\r\n                    <div className='contenedorGrupos'>\r\n                        <div className='contenedorPrimerGrupo'>\r\n                            {grupos.map((grupo) => (\r\n                                <OriginGrupo\r\n                                    buscado={buscado}\r\n                                    grupo={grupo}\r\n                                    actualizar={actualizar}\r\n                                    handleactualizar={handleactualizar}\r\n                                    actividades={actividades}\r\n                                    colores={colores}\r\n                                    coloresClaros={coloresClaros}\r\n                                    selectTru={props.selectTru}\r\n                                    selectActividad={props.selectActividad}\r\n                                    selectTransaccion={props.selectTransaccion}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <svg className='lineas lineaFinal'>\r\n                        <line\r\n                            className='linea'\r\n                            x1='50%'\r\n                            y1='0'\r\n                            x2='50%'\r\n                            y2='50'\r\n                            style={{\r\n                                stroke:\r\n                                    colores[\r\n                                        buscado?.transacciones[0]?.fuente ||\r\n                                            buscado?.due√±oActual\r\n                                    ],\r\n                            }}\r\n                        />\r\n                    </svg>\r\n                    <div\r\n                        className='buscado'\r\n                        id={buscado?.id}\r\n                        style={{\r\n                            backgroundColor:\r\n                                coloresClaros[\r\n                                    buscado?.transacciones[0]?.fuente ||\r\n                                        buscado?.due√±oActual\r\n                                ],\r\n                            borderColor:\r\n                                colores[\r\n                                    buscado?.transacciones[0]?.fuente ||\r\n                                        buscado?.due√±oActual\r\n                                ],\r\n                        }}\r\n                        onClick={() => props.selectTru(buscado)}\r\n                    ></div>\r\n                    {buscado?.transacciones.length > 0 && (\r\n                        <React.Fragment>\r\n                            <svg className='lineasCortas'>\r\n                                <line\r\n                                    className='linea'\r\n                                    x1='50%'\r\n                                    y1='0'\r\n                                    x2='50%'\r\n                                    y2='50'\r\n                                    style={{\r\n                                        stroke:\r\n                                            colores[\r\n                                                buscado?.transacciones[0]\r\n                                                    ?.fuente\r\n                                            ],\r\n                                    }}\r\n                                />\r\n                            </svg>\r\n                            <div\r\n                                className='transaccion'\r\n                                onClick={() =>\r\n                                    props.selectTransaccion(\r\n                                        buscado?.transacciones[0]\r\n                                    )\r\n                                }\r\n                            ></div>\r\n                        </React.Fragment>\r\n                    )}\r\n                </div>\r\n            )}\r\n            {!existe && (\r\n                <div className='contenedorInstrucciones'>\r\n                    <h2>No se encontro el activo</h2>\r\n                    <h3>\r\n                        Porfavor revise el identificador y vuelva a intentar\r\n                    </h3>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default OrginGraphViz;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Consulta.css';\r\nimport GraphViz from '../GraphViz/GraphViz';\r\nimport OriginGraphViz from '../OriginGraphViz/OriginGraphViz';\r\n\r\nfunction Consulta(props) {\r\n    return (\r\n        <React.Fragment>\r\n            {props.machete && props.consulta === 'destino' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Rastreo del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <GraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            {!props.machete && props.consulta === 'destino' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Rastreo del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <GraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            {props.machete && props.consulta === 'origen' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Procedencia del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <OriginGraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            {!props.machete && props.consulta === 'origen' && (\r\n                <React.Fragment>\r\n                    <h1 className='tituloViz'>\r\n                        Procedencia del activo: <br /> {props.buscado}\r\n                    </h1>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <OriginGraphViz\r\n                        buscado={props.buscado}\r\n                        selectTru={props.selectTru}\r\n                        selectActividad={props.selectActividad}\r\n                        selectTransaccion={props.selectTransaccion}\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Consulta;\r\n","import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nfunction MapContainer(props) {\r\n    const containerStyle = {\r\n        position: 'relative',\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n    };\r\n\r\n    return (\r\n        <div className='mapDetalle'>\r\n            <Map\r\n                google={props.google}\r\n                zoom={8}\r\n                containerStyle={containerStyle}\r\n                initialCenter={{\r\n                    lat: props.ubicacion.lat,\r\n                    lng: props.ubicacion.lon,\r\n                }}\r\n                center={{\r\n                    lat: props.ubicacion.lat,\r\n                    lng: props.ubicacion.lon,\r\n                }}\r\n            >\r\n                <Marker\r\n                    position={{\r\n                        lat: props.ubicacion.lat,\r\n                        lng: props.ubicacion.lon,\r\n                    }}\r\n                />\r\n            </Map>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDiA9sL22y8i3MfkK4dAffbDrVocFwQQYw',\r\n})(MapContainer);\r\n","import React from 'react';\r\nimport GoogleMap from '../GoogleMap/GoogleMap';\r\n\r\nfunction DetalleTru(props) {\r\n    let handleProcedencia = () => {\r\n        props.setBuscado(props.tru.id);\r\n        props.setConsulta('origen');\r\n        props.updateInput(props.tru.id);\r\n        props.setMachete(!props.machete);\r\n    };\r\n\r\n    let handleRastrear = () => {\r\n        props.setBuscado(props.tru.id);\r\n        props.setConsulta('destino');\r\n        props.updateInput(props.tru.id);\r\n        props.setMachete(!props.machete);\r\n    };\r\n    return (\r\n        <div className='contenedorDetalle'>\r\n            <h3 className='tituloDetalle'>Activo:</h3>\r\n            <h4 className='idDetalleTru'>{props.tru.id}</h4>\r\n            <button className='boton' onClick={handleProcedencia}>\r\n                Consultar Procedencia\r\n            </button>\r\n            <button className='boton' onClick={handleRastrear}>\r\n                Rastrear Activo\r\n            </button>\r\n            {props.tru.SKU && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>SKU:</h5>\r\n                    <p className='valorDetalle'>{props.tru.SKU}</p>\r\n                </React.Fragment>\r\n            )}\r\n            {props.tru.UPC && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>UPC:</h5>\r\n                    <p className='valorDetalle'>{props.tru.UPC}</p>\r\n                </React.Fragment>\r\n            )}\r\n            <h5 className='atributoDetalle'>Consumido:</h5>\r\n            <p className='valorDetalle'>{props.tru.consumido ? 'S√≠' : 'No'}</p>\r\n            {props.tru.consumido && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>√∫ltimo due√±o:</h5>\r\n                    <p className='valorDetalle'>{props.tru.due√±oActual}</p>\r\n                </React.Fragment>\r\n            )}\r\n            {!props.tru.consumido && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>due√±o Actual:</h5>\r\n                    <p className='valorDetalle'>{props.tru?.due√±oActual}</p>\r\n                </React.Fragment>\r\n            )}\r\n            {Object.keys(props.tru.caracteristicas)\r\n                .filter(\r\n                    (caracteristica) =>\r\n                        caracteristica !== 'imagenes' &&\r\n                        caracteristica !== 'videos'\r\n                )\r\n                .map((caracteristica) => (\r\n                    <React.Fragment>\r\n                        <h5 className='atributoDetalle'>{caracteristica}:</h5>\r\n                        <p className='valorDetalle'>\r\n                            {props.tru.caracteristicas[caracteristica]}\r\n                        </p>\r\n                    </React.Fragment>\r\n                ))}\r\n            {props.tru.caracteristicas.imagenes.map((imagen) => (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>{imagen[0]}:</h5>\r\n                    <img className='imagenDetalle' src={imagen[1]} />\r\n                </React.Fragment>\r\n            ))}\r\n            {props.tru.caracteristicas.videos.map((video) => (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>{video[0]}:</h5>\r\n                    <iframe className='videoDetalle' src={video[1]} />\r\n                </React.Fragment>\r\n            ))}\r\n            <div className='mapDetalle'>\r\n                <h5 className='atributoDetalle'>Ubicaci√≥n:</h5>\r\n                <GoogleMap ubicacion={props.tru.ubicacion} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetalleTru;\r\n","import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nfunction MapContainer(props) {\r\n    const containerStyle = {\r\n        position: 'relative',\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n    };\r\n\r\n    return (\r\n        <div className='mapDetalle'>\r\n            <Map\r\n                google={props.google}\r\n                zoom={8}\r\n                containerStyle={containerStyle}\r\n                initialCenter={{\r\n                    lat: props.destino.lat,\r\n                    lng: props.destino.lon,\r\n                }}\r\n                center={{\r\n                    lat: props.destino.lat,\r\n                    lng: props.destino.lon,\r\n                }}\r\n            >\r\n                <Marker\r\n                    position={{\r\n                        lat: props.destino.lat,\r\n                        lng: props.destino.lon,\r\n                    }}\r\n                />\r\n                <Marker\r\n                    position={{\r\n                        lat: props.origen.lat,\r\n                        lng: props.origen.lon,\r\n                    }}\r\n                />\r\n            </Map>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDiA9sL22y8i3MfkK4dAffbDrVocFwQQYw',\r\n})(MapContainer);\r\n","import React from 'react';\r\nimport GoogleMap from '../GoogleMapMarkers/GoogleMapMarkers';\r\n\r\nfunction DetalleActividad(props) {\r\n    return (\r\n        <div className='contenedorDetalle'>\r\n            <h3 className='tituloDetalle'>Actividad:</h3>\r\n            <h4 className='idDetalle'>{props.actividad.id}</h4>\r\n            <h5 className='atributoDetalle'>Tipo:</h5>\r\n            <p className='valorDetalle'>{props.actividad.tipo}</p>\r\n            <h5 className='atributoDetalle'>Realizada por:</h5>\r\n            <p className='valorDetalle'>{props.actividad.actor}</p>\r\n            <h5 className='atributoDetalle'>Fecha:</h5>\r\n            <p className='valorDetalle'>{props.actividad.fecha}</p>\r\n            {props.actividad.consume.length > 0 && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>Consumi√≥ los activos:</h5>\r\n                    {props.actividad.consume.map((tru) => (\r\n                        <p className='idTrus'>- {tru.id}</p>\r\n                    ))}\r\n                </React.Fragment>\r\n            )}\r\n            {props.actividad.produce.length > 0 && (\r\n                <React.Fragment>\r\n                    <h5 className='atributoDetalle'>Produjo los activos:</h5>\r\n                    {props.actividad.produce.map((tru) => (\r\n                        <p className='idTrus'>- {tru.id}</p>\r\n                    ))}\r\n                </React.Fragment>\r\n            )}\r\n            {props.actividad.tipo === 'TRANSPORTAR' && (\r\n                <div className='mapDetalle'>\r\n                    <h5 className='atributoDetalle'>Ubicaciones:</h5>\r\n                    <GoogleMap\r\n                        destino={props.actividad.destino}\r\n                        origen={props.actividad.consume[0].ubicacion}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetalleActividad;\r\n","import React from 'react';\r\n\r\nfunction DetalleTransaccion(props) {\r\n    return (\r\n        <div className='contenedorDetalle'>\r\n            <h3 className='tituloDetalle'>Transacci√≥n:</h3>\r\n            <h4 className='idDetalle'>{props.transaccion.id}</h4>\r\n            <h5 className='atributoDetalle'>Fuente:</h5>\r\n            <p className='valorDetalle'>{props.transaccion.fuente}</p>\r\n            <h5 className='atributoDetalle'>Destino:</h5>\r\n            <p className='valorDetalle'>{props.transaccion.destino}</p>\r\n            <h5 className='atributoDetalle'>Se transfirieron los activos:</h5>\r\n            {props.transaccion.trus.map((tru) => (\r\n                <p className='idTrus'>- {tru.id}</p>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetalleTransaccion;\r\n","import React from 'react';\r\nimport './Detalle.css';\r\nimport DetalleTru from '../DetalleTru/DetalleTru';\r\nimport DetalleActividad from '../DetalleActividad/DetalleActividad';\r\nimport DetalleTransaccion from '../DetalleTransaccion/DetalleTransaccion';\r\n\r\nfunction Detalle(props) {\r\n    return (\r\n        <div>\r\n            {!props.tru && !props.actividad && !props.transaccion && (\r\n                <div className='detalleNada'>\r\n                    Seleccione un nodo para ver m√°s informaci√≥n\r\n                </div>\r\n            )}\r\n            {props.tru && (\r\n                <DetalleTru\r\n                    tru={props.tru}\r\n                    setBuscado={props.setBuscado}\r\n                    setConsulta={props.setConsulta}\r\n                    updateInput={props.updateInput}\r\n                    machete={props.machete}\r\n                    setMachete={props.setMachete}\r\n                />\r\n            )}\r\n            {props.actividad && (\r\n                <DetalleActividad actividad={props.actividad} />\r\n            )}\r\n            {props.transaccion && (\r\n                <DetalleTransaccion transaccion={props.transaccion} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Detalle;\r\n","import React, { useState } from 'react';\r\nimport './Convensiones.css';\r\n\r\nfunction Convensiones() {\r\n    return (\r\n        <div className='contenedorConvensiones'>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='circulo'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Activos</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='rectangulo'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Actividades</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='rombo'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Transacciones</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='propilco'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Propilco</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='cartoflex'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Cartoflex</div>\r\n            </div>\r\n            <div className='convencion'>\r\n                <div className='contenedorFigura'>\r\n                    <div className='transportador'></div>\r\n                </div>\r\n                <div className='tituloConvension'>Transaportador</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Convensiones;\r\n","import React from 'react';\r\nimport './Flecha.css';\r\n\r\nfunction Flecha() {\r\n    return (\r\n        <div className='contenedorFlecha'>\r\n            <div className='textoEje'>Antiguo</div>\r\n            <div className='tiempo'>Tiempo</div>\r\n            <div className='lineaFlecha'></div>\r\n            <div className='flecha'></div>\r\n            <div className='textoEje'>Reciente</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flecha;\r\n","import React, { useState, useRef } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Instrucciones from './components/Instrucciones/Instrucciones';\nimport Consulta from './components/Consulta/Consulta';\nimport Detalle from './components/Detalle/Detalle';\nimport Convenciones from './components/Convenciones/Convensiones';\nimport Flecha from './components/Flecha/Flecha';\n\nfunction App() {\n    let [buscado, setBuscado] = useState(undefined);\n    let [consulta, setConsulta] = useState('');\n    let [tru, setTru] = useState(undefined);\n    let [actividad, setActividad] = useState(undefined);\n    let [transaccion, setTransaccion] = useState(undefined);\n    let [machete, setMachete] = useState(false);\n    let inputRef = useRef();\n\n    let selectTru = (tru) => {\n        setTru(tru);\n        setActividad(undefined);\n        setTransaccion(undefined);\n    };\n\n    let selectActividad = (actividad) => {\n        setTru(undefined);\n        setActividad(actividad);\n        setTransaccion(undefined);\n    };\n\n    let selectTransaccion = (transaccion) => {\n        setTru(undefined);\n        setActividad(undefined);\n        setTransaccion(transaccion);\n    };\n\n    let updateInput = (text) => {\n        inputRef.current.value = text;\n    };\n    return (\n        <React.Fragment>\n            <Header\n                setBuscado={setBuscado}\n                setConsulta={setConsulta}\n                inputRef={inputRef}\n                machete={machete}\n                setMachete={setMachete}\n            />\n            <div className='contenedor'>\n                <div id='contenedorViz' className='contenedorViz'>\n                    <div className='subContenedorViz'>\n                        {buscado && (\n                            <React.Fragment>\n                                <Flecha />\n                                <Convenciones />\n                                <Consulta\n                                    buscado={buscado}\n                                    consulta={consulta}\n                                    selectTru={selectTru}\n                                    selectActividad={selectActividad}\n                                    selectTransaccion={selectTransaccion}\n                                    machete={machete}\n                                />\n                            </React.Fragment>\n                        )}\n                        {!buscado && <Instrucciones />}\n                    </div>\n                </div>\n                <div className='contenedorMenu'>\n                    <Detalle\n                        tru={tru}\n                        actividad={actividad}\n                        transaccion={transaccion}\n                        setBuscado={setBuscado}\n                        setConsulta={setConsulta}\n                        updateInput={updateInput}\n                        machete={machete}\n                        setMachete={setMachete}\n                    />\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}